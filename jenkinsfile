pipeline {
    agent any
    
   

    stages {
    
     stage('Checkout') {
            steps {
                sh "echo 'Checkout....'"
                sh '''
                if [ -d "dockerproject" ]; then
                  rm -Rf dockerproject; 
                else 
                  echo "empty"
                fi
                '''
                sh "git clone 'https://github.com/gkerinel/dockerproject.git'"
            }
        }
    
    
    
    
        stage('Build') {
            steps {
                echo "'Building..'"
                sh "ls"
                sh "docker image build -t nginx:${BUILD_NUMBER} -f ./dockerproject/Dockerfile.txt ."
            }
        }
        
        stage ('Scan & Tag & Push') {
            
            steps{
                
                sh 'trivy --no-progress --exit-code 1 --severity ,HIGH,CRITICAL nginx:${BUILD_NUMBER}'
                
                withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                sh 'docker login -u gkerinelproject -p ${dockerhub}'
                sh 'docker tag nginx:${BUILD_NUMBER} gkerinelproject/nginx:${BUILD_NUMBER} '
                sh 'docker push gkerinelproject/nginx:${BUILD_NUMBER} '
            }
            
         }
        }
         stage ('Delete local images') {
            
            steps{
                 sh '''
                 docker rmi -f gkerinelproject/nginx:${BUILD_NUMBER}
                '''
            }
        }
        
       
        stage ('Pull and Run') {
            
            steps{
                
            sh ''' 
            export containerid=\$(docker ps -aqf name=nginx)
            if [ -n "$containerid" ]; then
              docker rm -f $containerid
            else
              echo "Containerid is empty"
            fi
            '''
                sh 'docker pull gkerinelproject/nginx:${BUILD_NUMBER}'
                sh "docker run -d -p 8888:80 --name nginx gkerinelproject/nginx:${BUILD_NUMBER}"
            }
            
        }
         
    }
}


